(function(){
  const whatWidth = (item) =>{
    let reqItemWidth = 0;
  
    const windowWidth = $(window).width();
    const container = item.closest('.products-menu');
    const titles = container.find('.products-menu__title');
    const titlesWidth = titles.width() * titles.length;
  
    const contentBlock = item.find('.products-menu__content-main');
  
    const paddingLeft = parseInt(contentBlock.css("padding-left"));
    const paddingRight = parseInt(contentBlock.css("padding-right"));
   
    
    const isMobile = window.matchMedia("(max-width: 850px)").matches;
  
    if(isMobile){
      reqItemWidth = windowWidth - titlesWidth;
    } else {
      reqItemWidth = 524;
    }
  
    return {
      container: reqItemWidth,
      content: reqItemWidth - paddingLeft - paddingRight
    }
  }
  
  const closeElems = (container) =>{
    const items = container.find('.products-menu__item');
    const content = container.find('.products-menu__content');
    items.removeClass('active');
    
    content.width(0);
  }
  
  const openElem = function(item) {
    const content = item.find('.products-menu__content');
    const textBlock = item.find('.products-menu__content-main');
  
    const needWidth = whatWidth(item);
  
    item.addClass('active');
  
    content.width(needWidth.container);
    textBlock.width(needWidth.content);
  
  }
  
  $('.products-menu__title').on('click', e=>{
    e.preventDefault();
  
    const currentElem = $(e.currentTarget);
    const item = currentElem.closest('.products-menu__item');
    const openedItem = item.hasClass('active');
    const container = item.closest('.products-menu');
  
    if(openedItem){
      closeElems(container)
    } else {
      closeElems(container)
      openElem(item)
    }
  
  });

})();;(function(){
  
let myMap;
 
const init = () => {
 myMap = new ymaps.Map("map", {
   center: [55.752004, 37.576133],
   zoom: 16,
   controls: []
 });

const coords = [
     [55.752004, 37.576133],
   ],
   myCollection = new ymaps.GeoObjectCollection({}, {
     draggable: false,
     iconLayout: 'default#image',
     iconImageHref: './img/icons/geo.svg',
     iconImageSize: [58, 73],
     iconImageOffset: [-35, -52]
   });
 
 for (let i = 0; i < coords.length; i++) {
   myCollection.add(new ymaps.Placemark(coords[i]));
 }
 
 myMap.geoObjects.add(myCollection);
 
 myMap.behaviors.disable('scrollZoom');
};


 
ymaps.ready(init);

})();(function(){
const validateFields = (form, fieldsArray) => {
    
    fieldsArray.forEach((field) => {
        field.removeClass("input-error");
        if (field.val().trim() === "") {
            field.addClass("input-error");
        }
    });

    const errorFields = form.find(".input-error");

    return errorFields.length === 0;
}

$(".form").submit(e => {
    e.preventDefault();


    const form = $(e.currentTarget);
    const name = form.find("[name='name']");
    const phone = form.find("[name='phone']");
    const comment = form.find("[name='comment']");
    const to = form.find("[name='to']");


    const modal = $("#modal");
    const content = modal.find(".modal__content");

    
    modal.removeClass("error-modal");

    const isValid = validateFields(form, [name, phone, comment, to]);


    if(isValid) {
       const request = $.ajax({
            url: "https://webdev-api.loftschool.com/sendmail",
            method: "post",
            data: {
                name: name.val(),
                phone: phone.val(),
                comment: comment.val(),
                to: to.val(),              
            },
            
            error: data => {
                
            }
        });

        request.done((data) => {
            content.text(data.message);
            $('.form').trigger("reset");
        });

        request.fail((data) => {
            const message = data.responseJSON.message;
                content.text(message);
                modal.addClass("error-modal");
        });

        request.always(() => {
            $.fancybox.open({
                src: "#modal", 
                type: "inline",
             });
        })
    }
    
});


$(".app-close-modal").click(e => {
    e.preventDefault();

    $.fancybox.close();
});

})();(function(){
const sections = $("section");
const display = $(".maincontent");
const sideMenu = $(".fixed-menu");
const menuItems = sideMenu.find(".fixed-menu__item");

const mobileDetect = new MobileDetect(window.navigator.userAgent);
const isMobile = mobileDetect.mobile();

let inScroll = false;

sections.first().addClass("active");

const countSectionPosition = (sectionEq) => {
    const position = sectionEq * -100; 

    if (isNaN(position)) {
        console.error("передано не верное значение в  countSectionPosition");
        return 0;
    }

    return position;
};

const ChangeMenuThemeForSection = (sectionEq) => {

    const currentSection = sections.eq(sectionEq);
    const menuTheme = currentSection.attr("data-sidemenu-theme");
    const activeClass = "fixed-menu--shadowed";

        if(menuTheme === "black") {
            sideMenu.addClass(activeClass);
        } else {
            sideMenu.removeClass(activeClass);
        }
};

const resetActiveClassForItem = (items, itemEq, activeClass) => {
    items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
}

const performTransition = (sectionEq) => {
    if (inScroll) return;

    const transitionOver = 1000;
    const mouseInertialOver = 300;

    inScroll = true;

    const position = countSectionPosition(sectionEq);

    ChangeMenuThemeForSection(sectionEq);
        

        display.css({
        transform: `translateY(${position}%)`
    });

    resetActiveClassForItem(sections, sectionEq, "active");

    setTimeout(() => {
        inScroll = false;

        resetActiveClassForItem(menuItems, sectionEq, "fixed-menu__item--active");

    }, transitionOver + mouseInertialOver);
};

    const viewportScroller = () => {
    const activeSection = sections.filter(".active");
    const nextSection = activeSection.next();
    const prevSection = activeSection.prev();

    return {
        next() {
            if (nextSection.length) {
                performTransition(nextSection.index());
            }
        },
        prev() {
            if (prevSection.length) {
                performTransition(prevSection.index());
            }   
        },
    };
};



$(window).on("wheel", (e) => {
    const deltaY = e.originalEvent.deltaY;
    const scroller = viewportScroller();

    if (deltaY > 0) {
        scroller.next();
    }
    if (deltaY < 0) {
        scroller.prev();
    }

    
});

$(window).on("keydown", (e) => {
    const tagName = e.target.tagName.toLowerCase();
    const userTypingInInputs = tagName === "input" || tagName === "textarea";
    const scroller = viewportScroller();

    if (userTypingInInputs) return;

        switch (e.keyCode) {
            case 38:
                scroller.prev();
                break;
    
            case 40:
                scroller.next();
                break;
    
        }
    
});



$(".wrapper").on("touchmove", e => e.preventDefault());

$("[data-scroll-to]").click((e) => {
    e.preventDefault();

    const $this = $(e.currentTarget);
    const target = $this.attr("data-scroll-to");
    const reqSection = $(`[data-section-id=${target}]`);

    performTransition(reqSection.index());
});



if (isMobile) {
    //https://github.com/mattbryson/TouchSwipe-Jquery-Plugin
    $("body").swipe({
        swipe: function (event, direction) {
            const scroller = viewportScroller();
            let scrollDirection = "";

            if (direction === "up") scrollDirection = "next";
            if(direction === "down") scrollDirection = "prev";

            scroller[scrollDirection]();
        },
    });
}

})()





  






;(function() {
    const playBtn = document.querySelector('.video__player-img');
    const video = document.getElementById('player');
    const playerPlayBrn = document.querySelector('.duration__img');
    const durationControl = document.getElementById('durationLevel');
    const soundControl = document.getElementById('micLevel');
    const soundBtn = document.getElementById('soundBtn');
    const dynamicBtn = document.getElementById('dynamic');
    
    let intervalId; 
    let soundLevel;
    
    // video.addEventListener("loadeddata", function () {
      window.addEventListener('load', function() {
    
    video.addEventListener('click', playStop); 
    let playButtons = document.querySelectorAll('.play');
    
    for (let i = 0; i < playButtons.length; i++) {
      playButtons[i].addEventListener('click', playStop);
    }
    
    durationControl.min = 0;
    durationControl.value = 0;
    durationControl.max = video.duration;
    durationControl.addEventListener('input', setVideoDuration);
    
    soundControl.min = 0;
    soundControl.max = 10;
    soundControl.value = soundControl.max;
    soundControl.addEventListener('input', changeSoundVolume);
    
    dynamicBtn.addEventListener('click', soundOf);
    });
    
    video.addEventListener('ended', () => {
      playBtn.classList.toggle('video__player-img--active');
      playerPlayBrn.classList.remove('duration__img-pause');
      video.currentTime = 0;
    })
    
    function playStop() {
      playBtn.classList.toggle('video__player-img--active');
      playerPlayBrn.classList.toggle('duration__img-pause');
      if (video.paused) {
        video.play();
        intervalId = setInterval(updateDuration, 1000 / 60);
      } else {
        clearInterval(intervalId);
        video.pause();
      }
    }
    
    function setVideoDuration() {
      video.currentTime = durationControl.value;
      updateDuration();
    }
    
    function updateDuration() {
      durationControl.value = video.currentTime;
      let step = video.duration / 100;
      let percent = video.currentTime / step;
      durationControl.style.background = `linear-gradient(90deg, #FEDB3F 0%, #FEDB3F ${percent}%, #626262 ${percent}%)`;
    }
    
    function changeSoundVolume() {
      video.volume = soundControl.value / 10;
      if (video.volume === 0) {
        soundBtn.classList.add('active');
      } else {
        soundBtn.classList.remove('active');
      }
    }
    
    function soundOf() {
      if (video.volume === 0) {
        video.volume = soundLevel;
        soundControl.value = soundLevel * 10;
        soundBtn.classList.remove('active');
      } else {
        soundLevel = video.volume;
        video.volume = 0;
        soundControl.value = 0;
        soundBtn.classList.add('active');
      }
    }
    })();
(function(){

const findBlockByAlias = (alias) => {
  return $(".reviews__item").filter((ndx, item) => {
    return $(item).attr("data-selected") === alias; 
  });
};

$(".reviews__switcher-link").click((e) => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr("data-select");
  const itemShow = findBlockByAlias(target);
  const curItem = $this.closest(".reviews__switcher-item");

  itemShow.addClass("reviews__item--active").siblings().removeClass("reviews__item--active");
  curItem.addClass("reviews__switcher-item--active").siblings().removeClass("reviews__switcher-item--active");
});


})();// простой способ
(function(){ 
let burger  = document.querySelector('.burger');
let overlay = document.querySelector('.overlay');
let body = document.querySelector('body');

let links = document.querySelectorAll('.overlay .menu__link'); [1,2,3,4,5,6,7]

links.forEach(function(element){
  element.addEventListener('click' , toggleMenu);
})

function toggleMenu(){
  burger.classList.toggle('burger--active');
  overlay.classList.toggle('overlay--active');
  body.classList.toggle('body--active-menu');
}

burger.addEventListener('click' , toggleMenu);


})()



















;
;(function(){
$(document).ready(function(){
  const slider = $(".slider__list").bxSlider({
    pager: false,
    controls: false,
  });

  $('.products__arrow--prev').click(e => {
    e.preventDefault();

    slider.goToPrevSlide();
  })
  $('.products__arrow--next').click(e => {
    e.preventDefault();

    slider.goToNextSlide();
  })
});


})()
	;(function(){ const openItem = item => {
    const container = item.closest(".team__item");
    const contentBlock = container.find(".team__content");
    const textBlock = contentBlock.find(".team__content-block");
    const reqHeight = textBlock.height();
  
    container.addClass("team__item--active");
    contentBlock.height(reqHeight);
  }
  
  
  const closeEveryItem = (container) => {
    const items = container.find('.team__content');
    const itemContainer = container.find(".team__item");
  
    itemContainer.removeClass("team__item--active");
    items.height(0);
  }
  
  $('.team__title').click(e => {
    const $this = $(e.currentTarget);
    const container = $this.closest('.team');
    const elemContainer = $this.closest(".team__item");
  
    if(elemContainer.hasClass("team__item--active")) {
      closeEveryItem(container);
    }
    else {
      closeEveryItem(container);
      openItem($this);
    }
  });
  
  
  
  
  // const trianglePosition ()
      
      
  $('.team__title').on('click', e =>{
      
    const chosenElem = $(e.currentTarget);
    const itemStore = chosenElem.closest('.team');
    const elemStore = chosenElem.closest('.team__item');
    const triangle = chosenElem.find('.team__title-svg-path');
    const triangleAll = itemStore.find('.team__title-svg-path');
  
  
  
    if(elemStore.hasClass('team__item-active')){
      closeItem(itemStore);
      triangle.attr('xlink:href', './img/icons/sprite.svg#team-triangle')
    } else{
      closeItem(itemStore);
      openItem(chosenElem);
      triangleAll.attr('xlink:href', './img/icons/sprite.svg#team-triangle');
      triangle.attr('xlink:href', './img/icons/sprite.svg#triangle-up');
  
    }
  });

})()
//# sourceMappingURL=data:application/json;charset=utf8;base64,
